{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/la capsule/project/morningnews/part4/morningnews-part3-backend-331998102/reactapp/src/ScreenSource.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport { List, Avatar, Icon } from 'antd';\nimport Nav from './Nav';\n\nfunction ScreenSource() {\n  const [sourceList, setSourceList] = useState([]);\n  const [selectedLang, setSelectedLang] = useState('fr');\n  useEffect(() => {\n    const APIResultsLoading = async () => {\n      var langues = 'fr';\n      var country = 'fr';\n\n      if (selectedLang == 'en') {\n        var langue = 'en';\n        var country = 'en';\n      }\n\n      const data = await fetch(`https://newsapi.org/v2/sources?language=${langue}&country=${country}&apiKey=2883e07c86dd475cac2332c62fc8a276`);\n      const body = await data.json();\n      setSourceList(body.sources);\n    };\n\n    APIResultsLoading();\n  }, [selectedLang]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    className: \"Banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    style: {\n      width: '40px',\n      margin: '10px',\n      cursor: 'pointer'\n    },\n    src: \"/images/fr.jpg\",\n    onClick: () => setSelectedLang('fr'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    style: {\n      width: '40px',\n      margin: '10px',\n      cursor: 'pointer'\n    },\n    src: \"/images/en.jpg\",\n    onClick: () => setSelectedLang('en '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"HomeThemes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(List, {\n    itemLayout: \"horizontal\",\n    dataSource: sourceList,\n    renderItem: source => React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(List.Item.Meta, {\n      avatar: React.createElement(Avatar, {\n        src: `/images/${source.category}.png`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }),\n      title: React.createElement(Link, {\n        to: `/screenarticlesbysource/${source.id}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, source.name),\n      description: source.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })));\n}\n\nfunction mapStateToProps(state) {}\n\nfunction mapDispatchToProps(state) {\n  return {\n    changeLang: function (selectedLang) {\n      dispatch({\n        type: 'changeLang',\n        selectedLang: selectedLang\n      });\n    }\n  };\n}\n\nexport default ScreenSource;","map":{"version":3,"sources":["/Users/user/Desktop/la capsule/project/morningnews/part4/morningnews-part3-backend-331998102/reactapp/src/ScreenSource.js"],"names":["React","useState","useEffect","Link","List","Avatar","Icon","Nav","ScreenSource","sourceList","setSourceList","selectedLang","setSelectedLang","APIResultsLoading","langues","country","langue","data","fetch","body","json","sources","display","justifyContent","alignItems","width","margin","cursor","source","category","id","name","description","mapStateToProps","state","mapDispatchToProps","changeLang","dispatch","type"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom'\nimport './App.css';\nimport { List, Avatar, Icon} from 'antd';\nimport Nav from './Nav'\n\nfunction ScreenSource() {\n\n  const [sourceList, setSourceList] = useState([])\n  const [selectedLang, setSelectedLang] = useState('fr')\n\n\n\n  useEffect(() => {\n    const APIResultsLoading = async() => {\n      var langues ='fr'\n      var country ='fr'\n\n    if (selectedLang == 'en'){\n      var langue ='en'\n      var country ='en'\n      } \n      \n      const data = await fetch(`https://newsapi.org/v2/sources?language=${langue}&country=${country}&apiKey=2883e07c86dd475cac2332c62fc8a276`,)\n      const body = await data.json()\n      setSourceList(body.sources)\n    }\n\n    APIResultsLoading()\n  }, [selectedLang ])\n\n  return (\n    <div>\n        <Nav/>\n       \n       <div style ={{display:'flex', justifyContent:'center' , alignItems:'center'}} className=\"Banner\">\n          <img style={{width:'40px', margin:'10px', cursor: 'pointer'}} src='/images/fr.jpg'  onClick={() => setSelectedLang('fr')}/>\n          <img style={{width:'40px', margin:'10px', cursor: 'pointer'}} src='/images/en.jpg'  onClick={() => setSelectedLang('en ')} />\n    \n       </div> \n      \n      \n       <div className=\"HomeThemes\">\n          \n              <List\n                  itemLayout=\"horizontal\"\n                  dataSource={sourceList}\n                  renderItem={source => (\n                    <List.Item>\n                      <List.Item.Meta\n                        avatar={<Avatar src={`/images/${source.category}.png`} />}\n                        title={<Link to={`/screenarticlesbysource/${source.id}`}>{source.name}</Link>}\n                        description={source.description}\n                      />\n                    </List.Item>\n                  )}\n                />\n\n\n        </div>\n                 \n      </div>\n  );\n}\n\nfunction mapStateToProps(state){\n\n}\nfunction mapDispatchToProps(state){\n  return {\n    changeLang: function (selectedLang){\n      dispatch({type: 'changeLang', selectedLang: selectedLang})\n    }\n  }\n}\nexport default ScreenSource;\n"]},"metadata":{},"sourceType":"module"}