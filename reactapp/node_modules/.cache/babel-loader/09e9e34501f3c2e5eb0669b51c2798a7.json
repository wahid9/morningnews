{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/la capsule/project/morningnews/part4/morningnews-part3-backend-331998102/reactapp/src/ScreenSource.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport './App.css';\nimport { List, Avatar, Image } from 'antd';\nimport Nav from './Nav';\n\nfunction ScreenSource() {\n  const [sourceList, setSourceList] = useState([]);\n  const data = [{\n    title: 'Ant Design Title 1'\n  }, {\n    title: 'Ant Design Title 2'\n  }, {\n    title: 'Ant Design Title 3'\n  }, {\n    title: 'Ant Design Title 4'\n  }];\n  useEffect(() => {\n    const APIResultsLoading = async () => {\n      const data = await fetch('https://newsapi.org/v2/sources?language=fr&country=fr&apiKey=2883e07c86dd475cac2332c62fc8a276');\n      const body = await data.json();\n      setSourceList(body.sources);\n    };\n\n    APIResultsLoading();\n  }, []);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(Nav, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"Banner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    icon: \"user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Avatar, {\n    icon: React.createElement(Icon, {\n      type: \"user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(Avatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"U\"), React.createElement(Avatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"USER\"), React.createElement(Avatar, {\n    src: \"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(Avatar, {\n    style: {\n      color: '#f56a00',\n      backgroundColor: '#fde3cf'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"U\"), React.createElement(Avatar, {\n    style: {\n      backgroundColor: '#87d068'\n    },\n    icon: \"user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), \",\"), React.createElement(\"div\", {\n    className: \"HomeThemes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(List, {\n    itemLayout: \"horizontal\",\n    dataSource: sourceList,\n    renderItem: source => React.createElement(List.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(List.Item.Meta, {\n      avatar: React.createElement(Avatar, {\n        src: `/images/${source.category}.png`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }),\n      title: React.createElement(Link, {\n        to: `/screenarticlesbysource/${source.id}`,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, source.name),\n      description: source.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })));\n}\n\nexport default ScreenSource;","map":{"version":3,"sources":["/Users/user/Desktop/la capsule/project/morningnews/part4/morningnews-part3-backend-331998102/reactapp/src/ScreenSource.js"],"names":["React","useState","useEffect","Link","List","Avatar","Image","Nav","ScreenSource","sourceList","setSourceList","data","title","APIResultsLoading","fetch","body","json","sources","color","backgroundColor","source","category","id","name","description"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAO,WAAP;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAmC,MAAnC;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,SAASC,YAAT,GAAwB;AAEtB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAMU,IAAI,GAAG,CACX;AACEC,IAAAA,KAAK,EAAE;AADT,GADW,EAIX;AACEA,IAAAA,KAAK,EAAE;AADT,GAJW,EAOX;AACEA,IAAAA,KAAK,EAAE;AADT,GAPW,EAUX;AACEA,IAAAA,KAAK,EAAE;AADT,GAVW,CAAb;AAeAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,iBAAiB,GAAG,YAAW;AACnC,YAAMF,IAAI,GAAG,MAAMG,KAAK,CAAC,+FAAD,CAAxB;AACA,YAAMC,IAAI,GAAG,MAAMJ,IAAI,CAACK,IAAL,EAAnB;AACAN,MAAAA,aAAa,CAACK,IAAI,CAACE,OAAN,CAAb;AACD,KAJD;;AAMAJ,IAAAA,iBAAiB;AAClB,GARQ,EAQN,EARM,CAAT;AAUA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAGG;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,EAEH,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFG,EAGH,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHG,EAIH,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJG,EAKH,oBAAC,MAAD;AAAQ,IAAA,GAAG,EAAC,kEAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALG,EAMH,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEK,MAAAA,KAAK,EAAE,SAAT;AAAoBC,MAAAA,eAAe,EAAE;AAArC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SANG,EAOH,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAE;AAAEA,MAAAA,eAAe,EAAE;AAAnB,KAAf;AAA+C,IAAA,IAAI,EAAC,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPG,CAFA,MAHH,EAgBG;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEO,oBAAC,IAAD;AACI,IAAA,UAAU,EAAC,YADf;AAEI,IAAA,UAAU,EAAEV,UAFhB;AAGI,IAAA,UAAU,EAAEW,MAAM,IAChB,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,IAAN,CAAW,IAAX;AACE,MAAA,MAAM,EAAE,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAG,WAAUA,MAAM,CAACC,QAAS,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADV;AAEE,MAAA,KAAK,EAAE,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAG,2BAA0BD,MAAM,CAACE,EAAG,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmDF,MAAM,CAACG,IAA1D,CAFT;AAGE,MAAA,WAAW,EAAEH,MAAM,CAACI,WAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFP,CAhBH,CADF;AAsCD;;AAED,eAAehB,YAAf","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport {Link} from 'react-router-dom'\nimport './App.css';\nimport { List, Avatar, Image} from 'antd';\nimport Nav from './Nav'\n\nfunction ScreenSource() {\n\n  const [sourceList, setSourceList] = useState([])\n\n  const data = [\n    {\n      title: 'Ant Design Title 1',\n    },\n    {\n      title: 'Ant Design Title 2',\n    },\n    {\n      title: 'Ant Design Title 3',\n    },\n    {\n      title: 'Ant Design Title 4',\n    },\n  ];\n\n  useEffect(() => {\n    const APIResultsLoading = async() => {\n      const data = await fetch('https://newsapi.org/v2/sources?language=fr&country=fr&apiKey=2883e07c86dd475cac2332c62fc8a276')\n      const body = await data.json()\n      setSourceList(body.sources)\n    }\n\n    APIResultsLoading()\n  }, [])\n\n  return (\n    <div>\n        <Nav/>\n       \n       <div className=\"Banner\">\n      \n       <div>\n    <Avatar icon=\"user\" />\n    <Avatar icon={<Icon type=\"user\" />} />\n    <Avatar>U</Avatar>\n    <Avatar>USER</Avatar>\n    <Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />\n    <Avatar style={{ color: '#f56a00', backgroundColor: '#fde3cf' }}>U</Avatar>\n    <Avatar style={{ backgroundColor: '#87d068' }} icon=\"user\" />\n  </div>,\n      \n      </div>\n       <div className=\"HomeThemes\">\n          \n              <List\n                  itemLayout=\"horizontal\"\n                  dataSource={sourceList}\n                  renderItem={source => (\n                    <List.Item>\n                      <List.Item.Meta\n                        avatar={<Avatar src={`/images/${source.category}.png`} />}\n                        title={<Link to={`/screenarticlesbysource/${source.id}`}>{source.name}</Link>}\n                        description={source.description}\n                      />\n                    </List.Item>\n                  )}\n                />\n\n\n          </div>\n                 \n      </div>\n  );\n}\n\nexport default ScreenSource;\n"]},"metadata":{},"sourceType":"module"}